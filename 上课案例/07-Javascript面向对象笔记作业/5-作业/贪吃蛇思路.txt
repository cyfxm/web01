贪吃蛇

像素游戏 一格一格的

在贪吃蛇游戏中有哪些对象  把每个对象转化为代码实现

地图  蛇  食物



地图用div表现  需要把地图按照"一定的尺寸"划分为很多格子 最左上角是 0,0 


食物也用div表现 通过left、top设置位置




一条蛇有很多节,每一节所处的位置不同,需要把蛇拆分为蛇节看待




封装地图类 把地图相关的属性和方法封装起来




封装食物类  实现食物显示在地图上的基本功能





实现食物 随机改变位置



在计算食物的left和top属性之前 , 我们就可以调用这个方法得到随机位置




封装蛇类

​	一个完整的蛇由多个蛇节构成

​	一个蛇节由一个div表示  一个蛇节应该含有 x坐标 y坐标 颜色

​	再给蛇节设置一个null值,后期根据蛇节的第四个元素判断是否为null,如果为null代表不存在这个dom元素,则创建一个div元素作为蛇节 

​	因为一条蛇有多个蛇节和蛇头组成,所以可以使用二维数组表示蛇身体的数据




封装蛇类运动方法 

跟方向有关的蛇节只有蛇头,其他蛇身的坐标都是沿用上一个蛇节的坐标,所以对于运动方向来说,我们只要控制好蛇头,蛇身跟上就好了

遍历蛇节数据 每一节延用上一节坐标

由于每一节需要延用上一节的坐标 先修改后面的蛇节 再修改前面的蛇节

注意:蛇头不用遍历

蛇可以向4个方向运动,所以需要有一个属性可以保存蛇运动的方向

改变蛇的坐标以后,还要记得重新渲染蛇



封装用户操作面板  给页面绑定键盘
给w s a d四个键,分别代表上下左右,当按下对应键的时候,可以改变蛇的运动方向




封装各种游戏检查方法

​	检测是否吃到食物

​		在显示食物的方法中,需要判断食物是否已经创建过dom元素,做法还是在食物类中定义一个属性保存你dom元素

​		吃完食物以后, 食物要重新显示 

​		蛇要加长 ,其实就是给蛇身体的数据添加一个数组元素,坐标多少都无所谓,因为我们蛇移动的时候,每一蛇节都会延用上一蛇节的坐标

​		蛇在不断的移动的同时还需要不断的判断是否吃到食物



​	检测是否出界

​		检测蛇头的坐标是否超出地图的上下左右边界坐标值即可




​	检测是否自残

​		当蛇长度超过4的时候,就有可能出现自己吃自己的情况,也就是蛇头跟蛇身体某一节的坐标完全重合,那就是咬到了

